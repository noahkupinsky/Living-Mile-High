version: "3.9"

services:
  https-portal:
    image: steveltn/https-portal:latest
    container_name: https-portal
    ports:
      - "80:80"
      - "443:443"
    environment:
      DOMAINS: |
        localhost -> http://nginx
      STAGE: local
    volumes:
      - ./https-portal/certs:/var/lib/https-portal
    depends_on:
      - nginx
    networks:
      - proxy

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf.template:/etc/nginx/nginx.conf.template:ro
    command: >
      /bin/bash -c "
      envsubst '\$${FPORT} \$${BPORT}' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf &&
      nginx -g 'daemon off;'"
    depends_on:
      - frontend
      - backend
    environment:
      FPORT: ${FPORT}
      BPORT: ${BPORT}
    networks:
      - proxy
      - internal

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    depends_on:
      - backend
    expose:
      - ${FPORT}
    env_file:
      - .env.staging
    networks:
      - internal

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    expose:
      - "${BPORT}"
    env_file:
      - .env.staging
    depends_on:
      - mongo
      - minio
    networks:
      - internal

  mongo:
    image: mongo:latest
    container_name: mongo_staging
    expose:
      - "27017"
    volumes:
      - mongo_data_staging:/data/db
    networks:
      - internal

  minio:
    image: "minio/minio:latest"
    container_name: minio_staging
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: "${CDN_KEY}"
      MINIO_ROOT_PASSWORD: "${CDN_SECRET}"
    volumes:
      - "minio_data_staging:/data/minio"
    command: minio server /data/minio --console-address ":9090"
    networks:
      - internal

networks:
  proxy:
    external: false
  internal:
    external: false

volumes:
  minio_data_staging:
    driver: local
    driver_opts:
      type: none
      device: ./.data/minio/staging
      o: bind
  mongo_data_staging:
    driver: local
    driver_opts:
      type: none
      device: ./.data/mongo/staging
      o: bind
