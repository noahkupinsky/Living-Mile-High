services:
  caddy:
    build:
      context: ./
      dockerfile: Dockerfile.caddy
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile.prod:/etc/caddy/Caddyfile
      - caddy_data_prod:/data
      - caddy_config_prod:/config
    environment:
      - BPORT=${BPORT}
      - FPORT=${FPORT}
      - HTTPS_CERT_EMAIL=${HTTPS_CERT_EMAIL}
    depends_on:
      - frontend
      - backend
    networks:
      - internal

  frontend:
    image: ${DOCKERHUB_USERNAME}/frontend:latest
    container_name: frontend
    depends_on:
      - backend
    expose:
      - ${FPORT}
    env_file:
      - ../.env.production
    networks:
      - internal

  backend:
    image: ${DOCKERHUB_USERNAME}/backend:latest
    container_name: backend
    expose:
      - ${BPORT}
    env_file:
      - ../.env.production
    networks:
      - internal

  mongo:
    image: mongo:latest
    container_name: mongo_prod
    expose:
      - "27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_PASSWORD}"
    volumes:
      - mongo_data_prod:/data/db
    networks:
      - internal

networks:
  internal:
    external: false

volumes:
  caddy_data_prod:
    driver: local
  caddy_config_prod:
    driver: local
  mongo_data_prod:
    driver: local
